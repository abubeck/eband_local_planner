#!/usr/bin/env python
import roslib;roslib.load_manifest('eband_local_planner')

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("max_vel_lin", double_t, 0, "Maximum linear velocity", 0.75, 0.0, 2.0)
gen.add("max_vel_th", double_t, 0, "Maximum rotational velocity", 1.0, 0.0, 2.0)

gen.add("min_vel_lin", double_t, 0, "Minimum linear velocity", 0.1, 0.0, 2.0)
gen.add("min_vel_th", double_t, 0, "Minimum rotational velocity", 0.0, 0.0, 2.0)

gen.add("min_in_place_vel_th", double_t, 0, "Minimum rotational velocity without moving translational", 0.0, 0.0, 2.0)
gen.add("in_place_trans_vel", double_t, 0, "Have to check what this actually does", 0.0, 0.0, 2.0)

gen.add("xy_goal_tolerance", double_t, 0, "Accuracy on target", 0.02, 0.0, 1.0)
gen.add("yaw_goal_tolerance", double_t, 0, "Accuracy on target", 0.04, 0.0, 1.0)
gen.add("tolerance_timeout", double_t, 0, "Stops improving Accuracy", 0.5, 0.0, 2.0)

gen.add("k_prop", double_t, 0, "Controller settings", 4.0, 0.0, 20.0)
gen.add("k_damp", double_t, 0, "Controller settings", 3.5, 0.0, 20.0)

gen.add("Ctrl_Rate", double_t, 0, "Update rate of trajectory controller", 10.0, 0.0, 100.0)

gen.add("max_acceleration", double_t, 0, "Damp maximal acceleration", 0.5, 0.0, 2.0)
gen.add("virtual_mass", double_t, 0, "", 0.75, 0.0, 10.0)

gen.add("max_translational_acceleration", double_t, 0, "Damp maximal acceleration", 0.5, 0.0, 2.0)
gen.add("max_rotational_acceleration", double_t, 0, "Damp maximal acceleration", 1.5, 0.0, 2.0)

gen.add("rotation_correction_threshold", double_t, 0, "Correct the rotation in direction of driving until this distance to the goal", 0.5, 0.0, 10.0)		
		
    
exit(gen.generate("eband_local_planner", "EBandLocalPlanner", "EBandLocalPlanner"))